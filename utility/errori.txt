9 - 	Rimuove il PCB puntato da p dalla coda dei processi puntata da head. Se p non è presente nella coda,
		restituisce NULL. (NOTA: p può trovarsi in una posizione arbitraria della coda). */
		pcb_t *outProcQ(struct list_head *head, pcb_t *p){
			if(list_empty(head)){
				addokbuf("lista vuota \n");
				return NULL;
			}
			else{
				pcb_t* i;
				pcb_t* t;
				_Bool b= FALSE;
				list_for_each_entry(i, head, p_next){
					addokbuf("entro nel ciclo\n");
					//controllo lista se è vuota
					/*if( (&(i->p_next) == head) && b==FALSE  ){
						addokbuf("non trovo->c'e' solo sentinella\n");
						return NULL;
					}
					addokbuf("passato primo if\n");
					//controllo p
					if((b==FALSE)){
						if(i==p){
							addokbuf("e' uguale e lo tolgo\n");
							b=TRUE;
							t=p;
							list_del(&(p->p_next));
							goto stop;
						}
					}
					addokbuf("passato seconfo if\n");*/
				}
				stop:
				if(b==TRUE){
					addokbuf("okay restituisco p");
					return t;
				}
				else{
					addokbuf("bo non ho trovato e non sono neanche arriavata alla sentinella");
					return NULL;
				}
			}
		}